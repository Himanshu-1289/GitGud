import React, { useState } from "react";
import { AuroraBackground } from "@/components/ui/aurora-background";

// FAQ Item Component
const FAQItem = ({ question, answer, isOpen, onClick }) => {
  return (
    <div className="border-b border-white/20 last:border-b-0 hover:bg-white/5 rounded-lg">
      <button
        className="flex justify-between items-center w-full py-4 px-4 text-left focus:outline-none"
        onClick={onClick}
      >
        <h3 className="text-lg font-semibold text-white">{question}</h3>
        <span
          className={`ml-6 flex-shrink-0 text-white p-2 rounded-full ${
            isOpen ? "bg-white/10" : ""
          }`}
        >
          {isOpen ? (
            <svg
              className="h-5 w-5"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                d="M5 15l7-7 7 7"
              />
            </svg>
          ) : (
            <svg
              className="h-5 w-5"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                d="M19 9l-7 7-7-7"
              />
            </svg>
          )}
        </span>
      </button>

      <div
        className={`overflow-hidden transition-all ease-in-out duration-300 ${
          isOpen ? "max-h-40" : "max-h-0"
        }`}
      >
        <div className="pb-4 px-6 pr-10">
          <p className="text-gray-300">{answer}</p>
        </div>
      </div>
    </div>
  );
};

// Main FAQ Component
const FAQ = () => {
  // FAQ Data
  const [openIndex, setOpenIndex] = useState(null);
  const faqData = [
    {
      question:
        "How does the hint system work if I get stuck on a coding problem?",
      answer:
        "The platform provides a basic code structure immediately, reveals the algorithm after 20 minutes, and the full solution after another 20 minutes if the problem remains unsolved.",
    },
    {
      question: "Is the code generated by AI always correct and optimized?",
      answer:
        "While our AI models generate high-quality code, we recommend reviewing and testing the code, as some solutions may not always be fully optimized.",
    },
    {
      question: "What happens if I solve a problem before hints are revealed?",
      answer:
        "If you solve a problem early, you can immediately move on to the next recommended challenge without waiting for hint timers.",
    },
    {
      question:
        "Is there any penalty for using hints or seeing the full solution?",
      answer:
        "No penalties! However, using hints is recorded in your profile to better tailor future problem recommendations.",
    },
    {
      question: "Can I compete with my friends or classmates on this platform?",
      answer:
        "Currently, the platform focuses on individual learning, but multiplayer features and contests are planned for future updates.",
    },
  ];

  return (
    <div className="max-w-4xl mx-auto px-6 py-15 ">
      <div className="text-center mb-8">
        <h2 className="text-white text-4xl font-bold mb-3">
          Frequently Asked Questions
        </h2>
      </div>

      <div className="bg-gradient-to-br from-black/50 to-black/30 backdrop-blur-xl rounded-2xl p-6 shadow-2xl border border-white/10">
        <div className="space-y-2">
          {faqData.map((faq, index) => (
            <FAQItem
              key={index}
              question={faq.question}
              answer={faq.answer}
              isOpen={openIndex === index}
              onClick={() => setOpenIndex(openIndex === index ? null : index)}
            />
          ))}
        </div>
      </div>
    </div>
  );
};

export default FAQ;
